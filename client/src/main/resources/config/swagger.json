{
  "swagger" : "2.0",
  "info" : {
    "description" : "OAuth2 Client Registration microservices endpoints.",
    "version" : "1.0.0",
    "title" : "OAuth2 Client Registration",
    "contact" : {
      "email" : "stevehu@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "oauth2.networknt.com",
  "basePath" : "/v1",
  "schemes" : [ "http", "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/oauth2/client" : {
      "get" : {
        "description" : "Return all clients",
        "operationId" : "getAllClient",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Client"
              }
            }
          }
        },
        "security" : [ {
          "client_auth" : [ "client.r" ]
        } ],
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      },
      "post" : {
        "description" : "Return a client object",
        "operationId" : "createClient",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/Client"
            }
          }
        },
        "security" : [ {
          "client_auth" : [ "client.w" ]
        } ],
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      },
      "put" : {
        "description" : "Return the updated client",
        "operationId" : "updateClient",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/Client"
            }
          }
        },
        "security" : [ {
          "client_auth" : [ "client.w" ]
        } ],
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      }
    },
    "/oauth2/client/{clientId}" : {
      "get" : {
        "description" : "Get a client by Id",
        "operationId" : "getClient",
        "parameters" : [ {
          "name" : "clientId",
          "in" : "path",
          "description" : "Client Id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/Client"
            }
          },
          "400" : {
            "description" : "Invalid clientId supplied"
          },
          "404" : {
            "description" : "Client not found"
          }
        },
        "security" : [ {
          "client_auth" : [ "client.r", "client.w" ]
        } ],
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      },
      "delete" : {
        "description" : "Delete a client by Id",
        "operationId" : "deleteClient",
        "parameters" : [ {
          "name" : "clientId",
          "in" : "path",
          "description" : "Client Id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid clientId supplied"
          },
          "404" : {
            "description" : "Client not found"
          }
        },
        "security" : [ {
          "client_auth" : [ "client.w" ]
        } ],
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      }
    }
  },
  "securityDefinitions" : {
    "client_auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "http://localhost:8888/oauth2/code",
      "flow" : "implicit",
      "scopes" : {
        "client.w" : "write client",
        "client.r" : "read client"
      }
    }
  },
  "definitions" : {
    "Client" : {
      "type" : "object",
      "properties" : {
        "clientId" : {
          "type" : "string",
          "description" : "a unique client id"
        },
        "clientSecret" : {
          "type" : "string",
          "description" : "client secret"
        },
        "clientName" : {
          "type" : "string",
          "description" : "client name"
        },
        "ownerName" : {
          "type" : "string",
          "description" : "client owner name"
        },
        "ownerEmail" : {
          "type" : "string",
          "description" : "client owner email address"
        },
        "scopes" : {
          "type" : "string",
          "description" : "client scopes separated by space"
        }
      }
    }
  }
}